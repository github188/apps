#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import os
import commands
import getopt
import json
os.chdir(os.path.dirname(sys.argv[0]))

from libnasconf import *

class IArgs:
	def __init__(self):
		self.mode = ''
		self.list_set = False
		self.add_set = False
		self.edit_set = False
		self.del_set = False
		self.check_set = False
		self.delcheck_set = False
		self.default_set = False
		self.basic_set = False
		self.access_set = False
		self.nasallow_set = False
		self.nfsallow_set = False
		self.sync_set = False
		self.high_set = False
		self.level_set = 3
		self.name_set = ''
		self.new_set = ''
		self.comment_set = ''
		self.comment_state = False
		self.path_set = ''
		self.write_set = ''
		self.read_set = ''
		self.invalid_set = ''
		self.valid_set = ''
		self.browsable_state = False
		self.browsable_set = 'yes'
		self.allow_set = ''
		self.guest_set = 'no'
		self.guest_state = False
		self.privacy_set = 'no'
		self.privacy_state = False
		self.page_set = 0
		self.coun_set = 10
		self.search_set = ''
		self.nfs_set = False

	def setMode(self, mode):
		if self.mode == '':
			self.mode = mode

#~ 恢复默认置
def get_default():
	conf_file = open(SMB_CONF_PATH, 'w')
	try:
		conf_file.write(SMB_CONF)
		conf_file.close()
	finally:
		conf_file.close()

	SYSTEM_OUT('rm -rf '+SMB_USER_CONF_PATH+'*')
	os.chmod(SMB_CONF_PATH, stat.S_IRWXU|stat.S_IRWXG|stat.S_IRWXO)
	SYS_smb_PATH = '/etc/samba/smb.conf'
	try:
		if os.path.exists(SYS_smb_PATH) == False:
			os.symlink(SMB_CONF_PATH, SYS_smb_PATH)
		else:
			if os.path.islink(SYS_smb_PATH) == False:
				os.remove(SYS_smb_PATH)
				os.symlink(SMB_CONF_PATH, SYS_smb_PATH)
	except:
		pass

#~ 初始化NFS文件
	try:
		os.mknod(NFS_CONF_PATH)
	except:
		pass
	os.chmod(NFS_CONF_PATH, stat.S_IRWXU|stat.S_IRWXG|stat.S_IRWXO)
	SYS_exports_PATH = '/etc/exports'
	try:
		if os.path.exists(SYS_exports_PATH) == False:
			os.symlink(NFS_CONF_PATH, SYS_exports_PATH)
		else:
			if os.path.islink(SYS_exports_PATH) == False:
				os.remove(SYS_exports_PATH)
				os.symlink(NFS_CONF_PATH, SYS_exports_PATH)
	except:
		pass
	SYSTEM_OUT('exportfs -r')

#~ 初始化GUEST用户配置
	conf_file = open(SMB_USER_CONF_PATH+'guest', 'w')
	guest_conf = """[系统设置]
comment = 系统设置
path = """+DEF_NASCONF+"""
browsable = yes
directory mask = 0777
create mask = 0777
read list = guest,@users
write list = root
valid users = root,guest,@users
inherit permissions = yes

"""
	try:
		conf_file.write(guest_conf)
		conf_file.close()
	except:
		conf_file.close()
	SYSTEM_OUT(RESTART_SMB)


if os.path.exists(SMB_CONF_PATH) == False:
	get_default()

OP_MODE = ['--list', '--add', '--edit', '--del', '--check', '--default', '--sync', '--delcheck', '--high']
long_opt = ['list', 'add', 'edit', 'del', 'check', 'delcheck', 'default','sync','high', 'nfs', 'level=', 'name=', 'path=', 'write=', 'read=', 'invalid=', 'browsable=', 'inherit=', 'comment=', 'basic', 'new=', 'access', 'nasallow', 'allow=', 'guest=', 'privacy=', 'nfsallow', 'page=', 'coun=', 'search=']

def main():
	try:
		opts, args = getopt.gnu_getopt(sys.argv[1:], '', long_opt)
	except getopt.GetoptError, e:
		AUsage(e)

	iArgs = IArgs()
	for opt,arg in opts:
		if opt in OP_MODE:
			iArgs.setMode(opt)

		if opt == '--list':
			iArgs.list_set = True
		elif opt == '--add':
			iArgs.add_set = True
		elif opt == '--edit':
			iArgs.edit_set = True
		elif opt == '--del':
			iArgs.del_set = True
		elif opt == '--check':
			iArgs.check_set = True
		elif opt == '--delcheck':
			iArgs.delcheck_set = True
		elif opt == '--default':
			iArgs.default_set = True
		elif opt == '--basic':
			iArgs.basic_set = True
		elif opt == '--access':
			iArgs.access_set = True
		elif opt == '--nasallow':
			iArgs.nasallow_set = True
		elif opt == '--nfsallow':
			iArgs.nfsallow_set = True
		elif opt == '--sync':
			iArgs.sync_set = True
		elif opt == '--high':
			iArgs.high_set = True
		elif opt == '--level':
			iArgs.level_set = arg
		elif opt == '--name':
			iArgs.name_set = arg
		elif opt == '--new':
			iArgs.new_set = arg
		elif opt == '--comment':
			iArgs.comment_set = arg
			iArgs.comment_state = True
		elif opt == '--path':
			iArgs.path_set = arg
		elif opt == '--write':
			iArgs.write_set = arg
		elif opt == '--read':
			iArgs.read_set = arg
		elif opt == '--invalid':
			iArgs.invalid_set = arg
		elif opt == '--valid':
			iArgs.valid_set = arg
		elif opt == '--browsable':
			iArgs.browsable_set = arg
			iArgs.browsable_state = True
		elif opt == '--allow':
			iArgs.allow_set = arg
		elif opt == '--guest':
			iArgs.guest_set = arg
			iArgs.guest_state = True
		elif opt == '--privacy':
			iArgs.privacy_set = arg
			iArgs.privacy_state = True
		elif opt == '--page':
			iArgs.page_set = arg
		elif opt == '--coun':
			iArgs.coun_set = arg
		elif opt == '--search':
			iArgs.search_set = arg
		elif opt == '--nfs':
			iArgs.nfs_set = True
	
	if iArgs.list_set == True:
		nas_list(iArgs)
	elif iArgs.add_set == True:
		add(iArgs)
	elif iArgs.edit_set == True:
		edit(iArgs)
	elif iArgs.del_set == True:
		NASdel(iArgs)
	elif iArgs.delcheck_set == True:
		NASdelcheck(iArgs)
	elif iArgs.check_set == True:
		check(iArgs)
	elif iArgs.default_set == True:
		get_default()
	elif iArgs.sync_set == True:
		get_sync(iArgs)
	elif iArgs.high_set == True:
		get_high(iArgs)
	else:
		AUsage()

if __name__ == '__main__':
	main()

#! /bin/sh
#
# reassume md devices

### BEGIN INIT INFO
# Provides:          jw-assemble
# Required-Start:    jw-apps
# Required-Stop:
# Default-Start:     2
# Default-Stop:      0 1 6
# Short-Description: drivers for jwele
# Description:       same with above.
### END INIT INFO

. /usr/local/lib/jw-functions

export "PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

_usage()
{
	echo "Usage: $(basename "$0")  {start}"
}

start_md()
{
	RAID_DIR="/tmp/.raid-info"
	RAID_DIR_LOCK="${RAID_DIR}/lock"
	RAID_DIR_BYMD="${RAID_DIR}/by-md"
	RAID_DIR_BYNAME="${RAID_DIR}/by-name"
	RAID_DIR_BYUUID="${RAID_DIR}/by-uuid"
	RAID_DIR_BYDISK="${RAID_DIR}/by-disk"
	
	if [ ! -d $RAID_DIR ]; then
		rm -rf $RAID_DIR
		mkdir $RAID_DIR
	fi
	if [ ! -d $RAID_DIR_LOCK ]; then
		rm -rf $RAID_DIR_LOCK
		mkdir $RAID_DIR_LOCK
	fi
	if [ ! -d $RAID_DIR_BYMD ]; then
		rm -rf $RAID_DIR_BYMD
		mkdir $RAID_DIR_BYMD
	fi
	if [ ! -d $RAID_DIR_BYNAME ]; then
		rm -rf $RAID_DIR_BYNAME
		mkdir $RAID_DIR_BYNAME
	fi
	if [ ! -d $RAID_DIR_BYUUID ]; then
		rm -rf $RAID_DIR_BYUUID
		mkdir $RAID_DIR_BYUUID
	fi
	if [ ! -d $RAID_DIR_BYDISK ]; then
		rm -rf $RAID_DIR_BYDISK
		mkdir $RAID_DIR_BYDISK
	fi

	sys-manager vg --load-sync-prio >/dev/null
	/usr/local/bin/md-assume.sh
	
	# 等待md添加到tmp目录
	while true
	do
		sys_mds=`ls /sys/block/ | grep "md[1-9]" | wc -l`
		tmp_mds=`ls $RAID_DIR_BYUUID | wc -l`
		if [ $tmp_mds -lt $sys_mds ]; then
			sleep 1
			continue
		else
			break
		fi
	done
}

stop_md()
{
	:
}

start_scst()
{
	modprobe scst
	modprobe scst_vdisk
	modprobe iscsi-scst
	iscsi-scstd
	if [ $? -eq 0 ]; then
		sys-manager iscsi --misc --restore-cfg | awk -F':' '{ print $NF }' | sed 's/^ //'| tr -d '}"!'
	fi
}

stop_scst()
{
	while true
	do
		killall iscsi-scstd 2>/dev/null
		if [ $? -ne 0 ]; then
			break;
		fi
		sleep 1
	done
	rmmod scst_vdisk
	rmmod iscsi-scst
	rmmod scst
}

start_nas()
{
	sys-manager nas --misc --restore-cfg | awk -F':' '{ print $NF }' | sed 's/^ //' | tr -d '}"!'
}

stop_nas()
{
	:
}

case "${1:-}" in
	start)
		start_md
		start_scst
		start_nas
	;;
	stop)
		stop_nas
		stop_scst
		stop_md	
	;;
	*)
		_usage
	;;
esac

exit 0

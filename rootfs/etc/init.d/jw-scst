#! /bin/sh
#
# start/stop iSCSI Target.

### BEGIN INIT INFO
# Provides:          jw-scst
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Default-Start:     2
# Default-Stop:      0 1 6
# Short-Description: a iSCSI Target implemention
# Description:       same with above.
### END INIT INFO

export "PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

SCST_ROOT="/sys/kernel/scst_tgt"
SCST_TGT_ROOT="$SCST_ROOT/targets"
SCST_DAEMON="/usr/local/sbin/iscsi-scstd"

. /lib/lsb/init-functions
. /usr/local/lib/jw-functions

__default_target()
{
	echo "iqn.2006-10.net.vlnb:tgt"
}

do_scst_start()
{
	safe_exec modprobe scst
	safe_exec modprobe scst_vdisk
	safe_exec modprobe iscsi-scst
	safe_exec exec "$SCST_DAEMON"

	echo "add_target $(__default_target)" > "$SCST_TGT_ROOT/iscsi/mgmt"
	echo "1" > "$SCST_TGT_ROOT/iscsi/enabled"
	echo "1" > "$SCST_TGT_ROOT/iscsi/$(__default_target)/enabled"

	echo ".......Start scst OK!........"
}

do_scst_stop()
{
	daemon_pid=$(ps ax | grep iscsi-scstd | grep -v grep | awk '{print $1}')
	[ ! -z "$daemon_pid" ] && safe_exec kill "$daemon_pid"

	sleep 1

	safe_exec rmmod iscsi_scst
	safe_exec rmmod scst_vdisk
	safe_exec rmmod scst

	echo ".......Stop scst OK!........"
}

scst_usage()
{
	echo "Usage: $(basename "$0")  {start|stop|restart|status}"
}


case "${1:-}" in
	start)
		do_scst_start
	;;
	stop)
		do_scst_stop
	;;
	restart)
		$0 stop
		$0 start
	;;
	status)
		status_of_proc -p $PIDFILE "$MDADM" "mdadm" && exit 0 || exit $?
	;;
	*)
		scst_usage
	;;
esac

exit 0

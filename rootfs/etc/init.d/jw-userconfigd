#! /bin/sh
#
# load jw user configuration restore services
### BEGIN INIT INFO
# Provides:          jw-userconfigd
# Required-Start:    
# Required-Stop:     
# Default-Start:     2
# Default-Stop:      0 1 6
# Short-Description: check and restore jw user configuration services
# Description:       same with above.
### END INIT INFO

CONF_SCRIPT="/usr/local/bin/userconf"
CONF_NEED_SAVE_FLAG="/tmp/conf_need_save.flag"
SLEEP_TIME=60  # seconds

SRCDIR_1="/opt/etc"
SRCDIR_2="/opt/jw-conf"

help()
{
    cat <<EOF
$0 usage:
    $0 stop|start|restart
EOF
}

start_monitor()
{
    inotifywait -mr -e close_write,modify,delete,create $SRCDIR_1 $SRCDIR_2 2>/dev/null |
    while read DIR FILE
    do 
        echo 1 > $CONF_NEED_SAVE_FLAG
    done
}

configd_daemon()
{
    while true
    do
        sleep $SLEEP_TIME
        if [ "`cat $CONF_NEED_SAVE_FLAG`" -eq 1 ]; then
            echo 0 > $CONF_NEED_SAVE_FLAG
            $CONF_SCRIPT --save
        fi
    done
}

start_configd()
{
    echo -n "Starting configd\n"
    # will use the web gui to restore the configuration from disk, so remove the following line
    #$CONF_SCRIPT --restore
    # start daemon 
    #echo 1 > $CONF_NEED_SAVE_FLAG
    $0 -m &
    $0 -d &
}

stop_configd()
{
    echo -n "Stopping configd\n"
    if [ "`cat $CONF_NEED_SAVE_FLAG`" -eq 1 ]; then
        echo 0 > $CONF_NEED_SAVE_FLAG
        $CONF_SCRIPT --save
    fi
    local status="`ps -ef | grep "jw-userconfigd" | grep -v "grep"`"
    if [ "$status" ]; then
        killall jw-userconfigd 2>/dev/null
    fi
    local status="`ps -ef | grep "inotifywait" | grep -v "grep"`"
    if [ "$status" ]; then
        killall inotifywait 2>/dev/null
    fi
}

action="$1"

case "$action" in
    start)
        start_configd
    ;;
    stop)
        stop_configd
    ;;
    restart)
        $0 stop
        $0 start
    ;;
    -d)
        configd_daemon
    ;;
    -m)
	start_monitor
    ;;
    *)
        help
        exit -1
    ;;
    
esac
exit 0

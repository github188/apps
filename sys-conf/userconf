#!/bin/bash

DISK_CMD="/usr/local/bin/disk"
SLOT2DEV_CMD="/usr/local/bin/disk_slot2dev"
CONF_PATH_ETC="/opt/etc"
CONF_PATH_JWCONF="/opt/jw-conf"
CONF_TAR_GZ_LOCK="/tmp/conf_tar_gz.lock"
CONF_TAR_GZ="/tmp/conf.tar.gz"
IM_EXPORT_PATH="/tmp/upload"
IM_EXPORT_TAR_GZ="/tmp/upload/conf.tar.gz"
CONF_MAX_SEQ="/opt/jw-conf/system/confmaxseq"
MDADM_CMD="/usr/local/sbin/mdadm"
RESERV=$((100*1024*1024))

help()
{
    cat <<EOF
$0 usage:
    $0 --save
    $0 --restore
    $0 --recover
    $0 --import
    $0 --export
    $0 --clean
EOF
}

get_conf_position_on_disk()
{
    data_offset=$((466944*512-$RESERV))
    data_offset_tmp=0
    disks=`$DISK_CMD --list | grep slot | cut -d: -f 3 | cut -d\" -f 1`
    for disk in $disks
    do
        dev=`$SLOT2DEV_CMD $disk`
        tmp_str=`$MDADM_CMD -E $dev 2>/dev/null | grep "Data Offset"`
        if [ "x$tmp_str" = "x" ];then
            continue
        else
            data_offset_tmp=`echo $tmp_str | cut -d: -f 2 | awk '{print $1}'`
            data_offset=$(($data_offset_tmp*512-$RESERV))
            break
        fi
    done

    echo $data_offset
}

save_conf_to_disk()
{
    local tmpfile=`mktemp`
    local max_seq=-1
    if [ -s "$CONF_MAX_SEQ" ]; then
        max_seq=`cat $CONF_MAX_SEQ 2>/dev/null`
    fi
    local sequence=$(($max_seq+1))
    echo "$sequence" > $CONF_MAX_SEQ
    local ret=0
    tar czf "$CONF_TAR_GZ" /opt/etc /opt/jw-conf 2>/dev/null
    if [ "$?" -ne 0 ]; then
        return 1
    fi
    local size=`wc -c "$CONF_TAR_GZ" 2>/dev/null | cut -d " " -f 1`
    local md5=`md5sum $CONF_TAR_GZ | cut -d " " -f 1`

    echo "sequence="$sequence > $tmpfile
    echo "md5="$md5 >> $tmpfile
    echo "size="$size >> $tmpfile
    local pos="`get_conf_position_on_disk`"

    for disk in `$DISK_CMD --list | grep slot | cut -d: -f 3 | cut -d\" -f 1`
    do
        dev=`$SLOT2DEV_CMD $disk`
	dd if=$CONF_TAR_GZ of=$dev bs=$size count=1 conv=notrunc seek=$(($pos+512)) 2>/dev/null
        if [ "$?" -eq 0 ]; then
            dd if=$tmpfile of=$dev bs=512 count=1 seek=$pos conv=notrunc 2>/dev/null
        fi
    done
    rm -f $tmpfile
    rm -f $CONF_TAR_GZ
}

restore_conf_from_disk()
{
    [ "$#" -gt 1 ] && return 1
    local tmpfile=`mktemp`
    local tmp_conf_tar_file="/tmp/tmpConf.tar.gz"
    local max_seq=-1
    local pos=`get_conf_position_on_disk`
    [ "$pos" -le 1 ] && return 1

    for disk in `$DISK_CMD --list | grep slot | cut -d: -f 3 | cut -d\" -f 1`
    do
        dev=`$SLOT2DEV_CMD $disk`
        dd if=$dev of=$tmpfile bs=512 count=1 skip=$pos 2>/dev/null
        local sequence=`head -n 3 $tmpfile 2>/dev/null | awk -F "=" '{if($1=="sequence") print $2;}'`
        if [ -n "$sequence" ]; then
            local md5=`head -n 3 $tmpfile 2>/dev/null | awk -F "=" '{if($1=="md5") print $2;}'`
            local size=`head -n 3 $tmpfile 2>/dev/null | awk -F "=" '{if($1=="size") print $2;}'`

	    dd if=$dev of=$tmp_conf_tar_file bs="$size" count=1 skip=$(($pos+512)) 2>/dev/null
            local md5New=`md5sum $tmp_conf_tar_file | cut -d " " -f 1`
            if [ "$md5" = "$md5New" -a "$max_seq" -lt "$sequence" ]; then
                max_seq=$sequence
                mv $tmp_conf_tar_file $CONF_TAR_GZ
		break
            fi
        fi
    done

    if [ -s "$CONF_TAR_GZ" ]; then
        local oldMaxSeq=-1
        if [ -s "$CONF_MAX_SEQ" ]; then
            oldMaxSeq=`cat $CONF_MAX_SEQ 2>/dev/null`
        fi
        rm -rf $CONF_PATH_ETC $CONF_PATH_JWCONF
        tar xzf $CONF_TAR_GZ -C / 2>/dev/null
    fi

    rm -f $tmpfile
    rm -f $tmp_conf_tar_file
    rm -f $CONF_TAR_GZ
}

recover_conf()
{
    [ "$#" -gt 1 ] && return 1
    local tmpfile=`mktemp`
    local pos=`get_conf_position_on_disk`
    [ "$pos" -le 1 ] && return 1

    for disk in `$DISK_CMD --list | grep slot | cut -d: -f 3 | cut -d\" -f 1`
    do
    	dev=`$SLOT2DEV_CMD $disk`

        dd if=$dev of=$tmpfile bs=512 count=1 skip=$pos 2>/dev/null
        local size=`head -n 3 $tmpfile 2>/dev/null | awk -F "=" '{if($1=="size") print $2;}'`
	dd if=/dev/zero of=$dev bs=$(($size+512)) count=1 conv=notrunc seek=$pos 2>/dev/null
        #if [ "$?" -ne 0 ];then
        #    break
        #fi
        rm -f $tmpfile
    done
}

export_user_conf()
{
    if [ ! -d "$IM_EXPORT_PATH" ];then
	mkdir -p "$IM_EXPORT_PATH"
    fi

    tar czf "$IM_EXPORT_TAR_GZ" /opt/etc /opt/jw-conf 2>/dev/null
    if [ "$?" -ne 0 ]; then
        echo '{"status": false, "msg": "导出用户配置文件失败!"}'
        return 1
    fi

    echo '{"status": false, "msg": "导出用户配置文件成功."}'
    return 0
}

import_user_conf()
{
    #TODO:
    return 0
}

clean_import_export()
{
    #TODO:
    return 0
}

action="$1"
case "$action" in
    --save)
        shift
        save_conf_to_disk "$@"
    ;;
    --restore)
        shift
        restore_conf_from_disk "$@"
    ;;
    --recover)
        shift
        recover_conf "$@"
    ;;
    --import)
	shift
	import_user_conf "$@"
    ;;
    --export)
	shift
	export_user_conf "$@"
    ;;
    --clean)
	shift
	clean_import_export "$@"
    ;;
    *)
        help
        exit 1
    ;;
esac
exit 0
